/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jpirsch <jpirsch@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2014/11/18 20:53:08 by jpirsch           #+#    #+#             */
/*   Updated: 2014/11/21 06:32:01 by jpirsch          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <libft.h>
#include <sys/types.h>
#include <sys/uio.h>
#include "get_next_line.h"

void	t_gnl_init(t_gnl info, const int fd)
{
	info.index = 0;
	info.fd = fd;
}

char	*line_join(char *buf, char **tmp)
{
	size_t	len;
	char	*line;

	len = ft_strchr_len(buf, '\n');
	line = malloc(sizeof(char*) * len + 1);
	if (len)
		line = ft_strsub(buf, 0, len);
	buf += (len + 1);
	ft_putendl("malloc and len worked");
	ft_putendl(buf);
	//*tmp = ft_strdup(buf);
		ft_putstr("taille tmp : ");
		ft_putnbr(ft_strchr_len(buf, '\0'));
	return (line);
}

int		get_next_line(const int fd, char **line)
{
	char			buf[BUF_SIZE + 1];
	int				ret;
	static t_gnl	info;

	ft_bzero(buf, BUF_SIZE + 1);
	t_gnl_init(info, fd);
	ret = read(fd, buf, BUF_SIZE);
	if (ret == -1)
		return (-1);
	else if (ret == 0)
	{
		*line = line_join(buf, info.tmp);
	}
	else
	{
			ft_putendl("ret != 0 et -1");
		*line = line_join(buf, info.tmp);
	}
	return (0);
}
